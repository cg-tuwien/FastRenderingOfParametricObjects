// Acknowledgements:
// SH coefficients source from here: https://www.shadertoy.com/view/dlGSDV 
//
// ^ which is licensed as follows (copy&pasted on 14.08.2024):
// 
// <cite>
// Supplemental code for "Ray Tracing Spherical Harmonics Glyphs":
// https://momentsingraphics.de/VMV2023.html
// View results of this shader here: https://www.shadertoy.com/view/dlGSDV
// (c) 2023, Christoph Peters
// This work is licensed under a CC0 1.0 Universal License. To the extent
// possible under law, Christoph Peters has waived all copyright and related or
// neighboring rights to the following code. This work is published from
// Germany. https://creativecommons.org/publicdomain/zero/1.0/
// </cite>

// The index of the highest used band of the spherical harmonics basis. Must be
// even, at least 2 and at most 12.
#define SH_DEGREE 12
// The number of spherical harmonics basis functions
#define SH_COUNT (((SH_DEGREE + 1) * (SH_DEGREE + 2)) / 2)
float SH_COEFFS[SH_COUNT] = {
	  -0.2739740312099,  0.2526670396328,  1.8922271728516,  0.2878578901291, -0.5339795947075, -0.2620058953762
#if SH_DEGREE >= 4
	,  0.1580424904823,  0.0329004973173, -0.1322413831949, -0.1332057565451,  1.0894461870193, -0.6319401264191, -0.0416776277125, -1.0772529840469,  0.1423762738705
#endif
#if SH_DEGREE >= 6
	,  0.7941166162491,  0.7490307092667, -0.3428381681442,  0.1024847552180, -0.0219132602215,  0.0499043911695,  0.2162453681231,  0.0921059995890, -0.2611238956451,  0.2549301385880, -0.4534865319729,  0.1922748684883, -0.6200597286224
#endif
#if SH_DEGREE >= 8
	, -0.0532187558711, -0.3569841980934,  0.0293972902000, -0.1977960765362, -0.1058669015765,  0.2372217923403, -0.1856198310852, -0.3373193442822, -0.0750469490886,  0.2146576642990, -0.0490148440003,  0.1288588196039,  0.3173974752426,  0.1990085393190, -0.1736343950033, -0.0482443645597, 0.1749017387629
#endif
#if SH_DEGREE >= 10
	, -0.0151847425660,  0.0418366046081,  0.0863263587216, -0.0649211244490,  0.0126096132283,  0.0545089217982, -0.0275142164626,  0.0399986574832, -0.0468244261610, -0.1292105653111, -0.0786858322658, -0.0663828464882,  0.0382439706831, -0.0041550330365, -0.0502800566338, -0.0732471630735, 0.0181751900972, -0.0090119333757, -0.0604443282359, -0.1469985252752, -0.0534046899715
#endif
#if SH_DEGREE >= 12
	, -0.0896672753415, -0.0130841364808, -0.0112942893801,  0.0272257498541,  0.0626717616331, -0.0222197983050, -0.0018541504308, -0.1653251944056,  0.0409697402846,  0.0749921454327, -0.0282830872616,  0.0006909458525,  0.0625599842287,  0.0812529816082,  0.0914693020772, -0.1197222726745, 0.0376277453183, -0.0832617004142, -0.0482175038043, -0.0839003635737, -0.0349423908400, 0.1204519568256, 0.0783745984003, 0.0297401205976, -0.0505947662525
#endif
};

void eval_sh_2(out float out_shs[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
}


void eval_sh_4(out float out_shs[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
}


void eval_sh_6(out float out_shs[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    b = z2 * a - 0.253968254 * b;
    a = b - 0.252525253 * a;
    d = 14.684485724 * a;
    out_shs[21] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    a = z2 * b - 0.238095238 * a;
    b = a - 0.242424242 * b;
    d = -19.226504963 * b;
    out_shs[20] = -c1 * d;
    out_shs[22] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    b = z2 * (a - 0.19047619);
    a = b - 0.212121212 * a;
    d = 15.199886782 * a;
    out_shs[19] = c0 * d;
    out_shs[23] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    a = (z2 - 0.111111111) * z;
    b = a - 0.161616162 * z;
    d = -10.133257855 * b;
    out_shs[18] = -c1 * d;
    out_shs[24] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    a = z2 - 9.09090909e-02;
    d = 5.550213908 * a;
    out_shs[17] = c0 * d;
    out_shs[25] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.366619162 * z;
    out_shs[16] = -c1 * d;
    out_shs[26] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.683184105;
    out_shs[15] = c0 * d;
    out_shs[27] = s0 * d;
}


void eval_sh_8(out float out_shs[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    b = z2 * a - 0.253968254 * b;
    a = b - 0.252525253 * a;
    d = 14.684485724 * a;
    out_shs[21] = d;
    b = z2 * a - 0.251748252 * b;
    a = b - 0.251282051 * a;
    d = 58.473368113 * a;
    out_shs[36] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    a = z2 * b - 0.238095238 * a;
    b = a - 0.242424242 * b;
    d = -19.226504963 * b;
    out_shs[20] = -c1 * d;
    out_shs[22] = s1 * d;
    a = z2 * b - 0.244755245 * a;
    b = a - 0.246153846 * b;
    d = -77.964490818 * b;
    out_shs[35] = -c1 * d;
    out_shs[37] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    b = z2 * (a - 0.19047619);
    a = b - 0.212121212 * a;
    d = 15.199886782 * a;
    out_shs[19] = c0 * d;
    out_shs[23] = s0 * d;
    b = z2 * a - 0.223776224 * b;
    a = b - 0.230769231 * a;
    d = 65.229772956 * a;
    out_shs[34] = c0 * d;
    out_shs[38] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    a = (z2 - 0.111111111) * z;
    b = a - 0.161616162 * z;
    d = -10.133257855 * b;
    out_shs[18] = -c1 * d;
    out_shs[24] = s1 * d;
    a = z2 * b - 0.188811189 * a;
    b = a - 0.205128205 * b;
    d = -48.175380057 * b;
    out_shs[33] = -c1 * d;
    out_shs[39] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    a = z2 - 9.09090909e-02;
    d = 5.550213908 * a;
    out_shs[17] = c0 * d;
    out_shs[25] = s0 * d;
    b = z2 * (a - 0.13986014);
    a = b - 0.169230769 * a;
    d = 31.097074109 * a;
    out_shs[32] = c0 * d;
    out_shs[40] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.366619162 * z;
    out_shs[16] = -c1 * d;
    out_shs[26] = s1 * d;
    a = (z2 - 7.69230769e-02) * z;
    b = a - 0.123076923 * z;
    d = -17.24955311 * b;
    out_shs[31] = -c1 * d;
    out_shs[41] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.683184105;
    out_shs[15] = c0 * d;
    out_shs[27] = s0 * d;
    a = z2 - 6.66666667e-02;
    d = 7.984991491 * a;
    out_shs[30] = c0 * d;
    out_shs[42] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.915706641 * z;
    out_shs[29] = -c1 * d;
    out_shs[43] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.72892666;
    out_shs[28] = c0 * d;
    out_shs[44] = s0 * d;
}


void eval_sh_10(out float out_shs[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    b = z2 * a - 0.253968254 * b;
    a = b - 0.252525253 * a;
    d = 14.684485724 * a;
    out_shs[21] = d;
    b = z2 * a - 0.251748252 * b;
    a = b - 0.251282051 * a;
    d = 58.473368113 * a;
    out_shs[36] = d;
    b = z2 * a - 0.250980392 * b;
    a = b - 0.250773994 * a;
    d = 233.240148813 * a;
    out_shs[55] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    a = z2 * b - 0.238095238 * a;
    b = a - 0.242424242 * b;
    d = -19.226504963 * b;
    out_shs[20] = -c1 * d;
    out_shs[22] = s1 * d;
    a = z2 * b - 0.244755245 * a;
    b = a - 0.246153846 * b;
    d = -77.964490818 * b;
    out_shs[35] = -c1 * d;
    out_shs[37] = s1 * d;
    a = z2 * b - 0.247058824 * a;
    b = a - 0.247678019 * b;
    d = -314.500952502 * b;
    out_shs[54] = -c1 * d;
    out_shs[56] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    b = z2 * (a - 0.19047619);
    a = b - 0.212121212 * a;
    d = 15.199886782 * a;
    out_shs[19] = c0 * d;
    out_shs[23] = s0 * d;
    b = z2 * a - 0.223776224 * b;
    a = b - 0.230769231 * a;
    d = 65.229772956 * a;
    out_shs[34] = c0 * d;
    out_shs[38] = s0 * d;
    b = z2 * a - 0.235294118 * b;
    a = b - 0.238390093 * a;
    d = 272.365814381 * a;
    out_shs[53] = c0 * d;
    out_shs[57] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    a = (z2 - 0.111111111) * z;
    b = a - 0.161616162 * z;
    d = -10.133257855 * b;
    out_shs[18] = -c1 * d;
    out_shs[24] = s1 * d;
    a = z2 * b - 0.188811189 * a;
    b = a - 0.205128205 * b;
    d = -48.175380057 * b;
    out_shs[33] = -c1 * d;
    out_shs[39] = s1 * d;
    a = z2 * b - 0.215686275 * a;
    b = a - 0.222910217 * b;
    d = -213.661323441 * b;
    out_shs[52] = -c1 * d;
    out_shs[58] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    a = z2 - 9.09090909e-02;
    d = 5.550213908 * a;
    out_shs[17] = c0 * d;
    out_shs[25] = s0 * d;
    b = z2 * (a - 0.13986014);
    a = b - 0.169230769 * a;
    d = 31.097074109 * a;
    out_shs[32] = c0 * d;
    out_shs[40] = s0 * d;
    b = z2 * a - 0.188235294 * b;
    a = b - 0.20123839 * a;
    d = 151.081370682 * a;
    out_shs[51] = c0 * d;
    out_shs[59] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.366619162 * z;
    out_shs[16] = -c1 * d;
    out_shs[26] = s1 * d;
    a = (z2 - 7.69230769e-02) * z;
    b = a - 0.123076923 * z;
    d = -17.24955311 * b;
    out_shs[31] = -c1 * d;
    out_shs[41] = s1 * d;
    a = z2 * b - 0.152941176 * a;
    b = a - 0.173374613 * b;
    d = -95.552248675 * b;
    out_shs[50] = -c1 * d;
    out_shs[60] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.683184105;
    out_shs[15] = c0 * d;
    out_shs[27] = s0 * d;
    a = z2 - 6.66666667e-02;
    d = 7.984991491 * a;
    out_shs[30] = c0 * d;
    out_shs[42] = s0 * d;
    b = z2 * (a - 0.109803922);
    a = b - 0.139318885 * a;
    d = 53.41533086 * a;
    out_shs[49] = c0 * d;
    out_shs[61] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.915706641 * z;
    out_shs[29] = -c1 * d;
    out_shs[43] = s1 * d;
    a = (z2 - 5.88235294e-02) * z;
    b = a - 9.90712074e-02 * z;
    d = -25.910241313 * b;
    out_shs[48] = -c1 * d;
    out_shs[62] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.72892666;
    out_shs[28] = c0 * d;
    out_shs[44] = s0 * d;
    a = z2 - 5.26315789e-02;
    d = 10.577811722 * a;
    out_shs[47] = c0 * d;
    out_shs[63] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -3.4318953 * z;
    out_shs[46] = -c1 * d;
    out_shs[64] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.767395118;
    out_shs[45] = c0 * d;
    out_shs[65] = s0 * d;
}


void eval_sh_12(out float out_shs[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    b = z2 * a - 0.253968254 * b;
    a = b - 0.252525253 * a;
    d = 14.684485724 * a;
    out_shs[21] = d;
    b = z2 * a - 0.251748252 * b;
    a = b - 0.251282051 * a;
    d = 58.473368113 * a;
    out_shs[36] = d;
    b = z2 * a - 0.250980392 * b;
    a = b - 0.250773994 * a;
    d = 233.240148813 * a;
    out_shs[55] = d;
    b = z2 * a - 0.250626566 * b;
    a = b - 0.250517598 * a;
    d = 931.186918633 * a;
    out_shs[78] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    a = z2 * b - 0.238095238 * a;
    b = a - 0.242424242 * b;
    d = -19.226504963 * b;
    out_shs[20] = -c1 * d;
    out_shs[22] = s1 * d;
    a = z2 * b - 0.244755245 * a;
    b = a - 0.246153846 * b;
    d = -77.964490818 * b;
    out_shs[35] = -c1 * d;
    out_shs[37] = s1 * d;
    a = z2 * b - 0.247058824 * a;
    b = a - 0.247678019 * b;
    d = -314.500952502 * b;
    out_shs[54] = -c1 * d;
    out_shs[56] = s1 * d;
    a = z2 * b - 0.248120301 * a;
    b = a - 0.248447205 * b;
    d = -1265.233874957 * b;
    out_shs[77] = -c1 * d;
    out_shs[79] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    b = z2 * (a - 0.19047619);
    a = b - 0.212121212 * a;
    d = 15.199886782 * a;
    out_shs[19] = c0 * d;
    out_shs[23] = s0 * d;
    b = z2 * a - 0.223776224 * b;
    a = b - 0.230769231 * a;
    d = 65.229772956 * a;
    out_shs[34] = c0 * d;
    out_shs[38] = s0 * d;
    b = z2 * a - 0.235294118 * b;
    a = b - 0.238390093 * a;
    d = 272.365814381 * a;
    out_shs[53] = c0 * d;
    out_shs[57] = s0 * d;
    b = z2 * a - 0.240601504 * b;
    a = b - 0.242236025 * a;
    d = 1121.509962433 * a;
    out_shs[76] = c0 * d;
    out_shs[80] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    a = (z2 - 0.111111111) * z;
    b = a - 0.161616162 * z;
    d = -10.133257855 * b;
    out_shs[18] = -c1 * d;
    out_shs[24] = s1 * d;
    a = z2 * b - 0.188811189 * a;
    b = a - 0.205128205 * b;
    d = -48.175380057 * b;
    out_shs[33] = -c1 * d;
    out_shs[39] = s1 * d;
    a = z2 * b - 0.215686275 * a;
    b = a - 0.222910217 * b;
    d = -213.661323441 * b;
    out_shs[52] = -c1 * d;
    out_shs[58] = s1 * d;
    a = z2 * b - 0.228070175 * a;
    b = a - 0.231884058 * b;
    d = -915.709049803 * b;
    out_shs[75] = -c1 * d;
    out_shs[81] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    a = z2 - 9.09090909e-02;
    d = 5.550213908 * a;
    out_shs[17] = c0 * d;
    out_shs[25] = s0 * d;
    b = z2 * (a - 0.13986014);
    a = b - 0.169230769 * a;
    d = 31.097074109 * a;
    out_shs[32] = c0 * d;
    out_shs[40] = s0 * d;
    b = z2 * a - 0.188235294 * b;
    a = b - 0.20123839 * a;
    d = 151.081370682 * a;
    out_shs[51] = c0 * d;
    out_shs[59] = s0 * d;
    b = z2 * a - 0.210526316 * b;
    a = b - 0.217391304 * a;
    d = 686.781787352 * a;
    out_shs[74] = c0 * d;
    out_shs[82] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.366619162 * z;
    out_shs[16] = -c1 * d;
    out_shs[26] = s1 * d;
    a = (z2 - 7.69230769e-02) * z;
    b = a - 0.123076923 * z;
    d = -17.24955311 * b;
    out_shs[31] = -c1 * d;
    out_shs[41] = s1 * d;
    a = z2 * b - 0.152941176 * a;
    b = a - 0.173374613 * b;
    d = -95.552248675 * b;
    out_shs[50] = -c1 * d;
    out_shs[60] = s1 * d;
    a = z2 * b - 0.187969925 * a;
    b = a - 0.198757764 * b;
    d = -471.12841933 * b;
    out_shs[73] = -c1 * d;
    out_shs[83] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.683184105;
    out_shs[15] = c0 * d;
    out_shs[27] = s0 * d;
    a = z2 - 6.66666667e-02;
    d = 7.984991491 * a;
    out_shs[30] = c0 * d;
    out_shs[42] = s0 * d;
    b = z2 * (a - 0.109803922);
    a = b - 0.139318885 * a;
    d = 53.41533086 * a;
    out_shs[49] = c0 * d;
    out_shs[61] = s0 * d;
    b = z2 * a - 0.160401003 * b;
    a = b - 0.175983437 * a;
    d = 293.800188384 * a;
    out_shs[72] = c0 * d;
    out_shs[84] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.915706641 * z;
    out_shs[29] = -c1 * d;
    out_shs[43] = s1 * d;
    a = (z2 - 5.88235294e-02) * z;
    b = a - 9.90712074e-02 * z;
    d = -25.910241313 * b;
    out_shs[48] = -c1 * d;
    out_shs[62] = s1 * d;
    a = z2 * b - 0.127819549 * a;
    b = a - 0.149068323 * b;
    d = -165.101452729 * b;
    out_shs[71] = -c1 * d;
    out_shs[85] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.72892666;
    out_shs[28] = c0 * d;
    out_shs[44] = s0 * d;
    a = z2 - 5.26315789e-02;
    d = 10.577811722 * a;
    out_shs[47] = c0 * d;
    out_shs[63] = s0 * d;
    b = z2 * (a - 9.02255639e-02);
    a = b - 0.118012422 * a;
    d = 82.550726364 * a;
    out_shs[70] = c0 * d;
    out_shs[86] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -3.4318953 * z;
    out_shs[46] = -c1 * d;
    out_shs[64] = s1 * d;
    a = (z2 - 4.76190476e-02) * z;
    b = a - 8.2815735e-02 * z;
    d = -36.028090689 * b;
    out_shs[69] = -c1 * d;
    out_shs[87] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.767395118;
    out_shs[45] = c0 * d;
    out_shs[65] = s0 * d;
    a = z2 - 4.34782609e-02;
    d = 13.3042542 * a;
    out_shs[68] = c0 * d;
    out_shs[88] = s0 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -3.923210529 * z;
    out_shs[67] = -c1 * d;
    out_shs[89] = s1 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.800821996;
    out_shs[66] = c0 * d;
    out_shs[90] = s0 * d;
}


void eval_sh_grad_2(out float out_shs[91], out vec3 out_grads[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    c0 = 1.0;
    s0 = 0.0;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    out_grads[2][0] = -c0 * d;
    out_grads[4][0] = s0 * d;
    out_grads[2][1] = s0 * d;
    out_grads[4][1] = c0 * d;
    d = 1.892349392 * z;
    out_grads[3][2] = d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    d = 1.092548431;
    out_grads[1][0] = c1 * d;
    out_grads[5][0] = s1 * d;
    out_grads[1][1] = -s1 * d;
    out_grads[5][1] = c1 * d;
    d = -1.092548431;
    out_grads[2][2] = -c1 * d;
    out_grads[4][2] = s1 * d;
    out_grads[0][0] = 0.0;
    out_grads[0][1] = 0.0;
    out_grads[0][2] = 0.0;
    out_grads[1][2] = 0.0;
    out_grads[3][0] = 0.0;
    out_grads[3][1] = 0.0;
    out_grads[5][2] = 0.0;
}


void eval_sh_grad_4(out float out_shs[91], out vec3 out_grads[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    c0 = 1.0;
    s0 = 0.0;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    out_grads[2][0] = -c0 * d;
    out_grads[4][0] = s0 * d;
    out_grads[2][1] = s0 * d;
    out_grads[4][1] = c0 * d;
    d = 1.892349392 * z;
    out_grads[3][2] = d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    out_grads[9][0] = -c0 * d;
    out_grads[11][0] = s0 * d;
    out_grads[9][1] = s0 * d;
    out_grads[11][1] = c0 * d;
    d = 14.809976568 * b;
    out_grads[10][2] = d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    d = 1.092548431;
    out_grads[1][0] = c1 * d;
    out_grads[5][0] = s1 * d;
    out_grads[1][1] = -s1 * d;
    out_grads[5][1] = c1 * d;
    d = -1.092548431;
    out_grads[2][2] = -c1 * d;
    out_grads[4][2] = s1 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    d = 6.62322287 * a;
    out_grads[8][0] = c1 * d;
    out_grads[12][0] = s1 * d;
    out_grads[8][1] = -s1 * d;
    out_grads[12][1] = c1 * d;
    d = -14.049977415 * a;
    out_grads[9][2] = -c1 * d;
    out_grads[11][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    d = -5.310392309 * z;
    out_grads[7][0] = -c0 * d;
    out_grads[13][0] = s0 * d;
    out_grads[7][1] = s0 * d;
    out_grads[13][1] = c0 * d;
    d = 6.62322287 * z;
    out_grads[8][2] = c0 * d;
    out_grads[12][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    d = 2.503342942;
    out_grads[6][0] = c1 * d;
    out_grads[14][0] = s1 * d;
    out_grads[6][1] = -s1 * d;
    out_grads[14][1] = c1 * d;
    d = -1.77013077;
    out_grads[7][2] = -c1 * d;
    out_grads[13][2] = s1 * d;
    out_grads[0][0] = 0.0;
    out_grads[0][1] = 0.0;
    out_grads[0][2] = 0.0;
    out_grads[1][2] = 0.0;
    out_grads[3][0] = 0.0;
    out_grads[3][1] = 0.0;
    out_grads[5][2] = 0.0;
    out_grads[6][2] = 0.0;
    out_grads[10][0] = 0.0;
    out_grads[10][1] = 0.0;
    out_grads[14][2] = 0.0;
}


void eval_sh_grad_6(out float out_shs[91], out vec3 out_grads[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    c0 = 1.0;
    s0 = 0.0;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    b = z2 * a - 0.253968254 * b;
    a = b - 0.252525253 * a;
    d = 14.684485724 * a;
    out_shs[21] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    out_grads[2][0] = -c0 * d;
    out_grads[4][0] = s0 * d;
    out_grads[2][1] = s0 * d;
    out_grads[4][1] = c0 * d;
    d = 1.892349392 * z;
    out_grads[3][2] = d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    out_grads[9][0] = -c0 * d;
    out_grads[11][0] = s0 * d;
    out_grads[9][1] = s0 * d;
    out_grads[11][1] = c0 * d;
    d = 14.809976568 * b;
    out_grads[10][2] = d;
    a = z2 * b - 0.238095238 * a;
    b = a - 0.242424242 * b;
    d = -19.226504963 * b;
    out_shs[20] = -c1 * d;
    out_shs[22] = s1 * d;
    out_grads[20][0] = -c0 * d;
    out_grads[22][0] = s0 * d;
    out_grads[20][1] = s0 * d;
    out_grads[22][1] = c0 * d;
    d = 88.106914343 * b;
    out_grads[21][2] = d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    d = 1.092548431;
    out_grads[1][0] = c1 * d;
    out_grads[5][0] = s1 * d;
    out_grads[1][1] = -s1 * d;
    out_grads[5][1] = c1 * d;
    d = -1.092548431;
    out_grads[2][2] = -c1 * d;
    out_grads[4][2] = s1 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    d = 6.62322287 * a;
    out_grads[8][0] = c1 * d;
    out_grads[12][0] = s1 * d;
    out_grads[8][1] = -s1 * d;
    out_grads[12][1] = c1 * d;
    d = -14.049977415 * a;
    out_grads[9][2] = -c1 * d;
    out_grads[11][2] = s1 * d;
    b = z2 * (a - 0.19047619);
    a = b - 0.212121212 * a;
    d = 15.199886782 * a;
    out_shs[19] = c0 * d;
    out_shs[23] = s0 * d;
    d = 30.399773564 * a;
    out_grads[19][0] = c1 * d;
    out_grads[23][0] = s1 * d;
    out_grads[19][1] = -s1 * d;
    out_grads[23][1] = c1 * d;
    d = -96.132524816 * a;
    out_grads[20][2] = -c1 * d;
    out_grads[22][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    d = -5.310392309 * z;
    out_grads[7][0] = -c0 * d;
    out_grads[13][0] = s0 * d;
    out_grads[7][1] = s0 * d;
    out_grads[13][1] = c0 * d;
    d = 6.62322287 * z;
    out_grads[8][2] = c0 * d;
    out_grads[12][2] = s0 * d;
    a = (z2 - 0.111111111) * z;
    b = a - 0.161616162 * z;
    d = -10.133257855 * b;
    out_shs[18] = -c1 * d;
    out_shs[24] = s1 * d;
    d = -30.399773564 * b;
    out_grads[18][0] = -c0 * d;
    out_grads[24][0] = s0 * d;
    out_grads[18][1] = s0 * d;
    out_grads[24][1] = c0 * d;
    d = 60.799547128 * b;
    out_grads[19][2] = c0 * d;
    out_grads[23][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    d = 2.503342942;
    out_grads[6][0] = c1 * d;
    out_grads[14][0] = s1 * d;
    out_grads[6][1] = -s1 * d;
    out_grads[14][1] = c1 * d;
    d = -1.77013077;
    out_grads[7][2] = -c1 * d;
    out_grads[13][2] = s1 * d;
    a = z2 - 9.09090909e-02;
    d = 5.550213908 * a;
    out_shs[17] = c0 * d;
    out_shs[25] = s0 * d;
    d = 22.200855632 * a;
    out_grads[17][0] = c1 * d;
    out_grads[25][0] = s1 * d;
    out_grads[17][1] = -s1 * d;
    out_grads[25][1] = c1 * d;
    d = -30.399773564 * a;
    out_grads[18][2] = -c1 * d;
    out_grads[24][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.366619162 * z;
    out_shs[16] = -c1 * d;
    out_shs[26] = s1 * d;
    d = -11.833095811 * z;
    out_grads[16][0] = -c0 * d;
    out_grads[26][0] = s0 * d;
    out_grads[16][1] = s0 * d;
    out_grads[26][1] = c0 * d;
    d = 11.100427816 * z;
    out_grads[17][2] = c0 * d;
    out_grads[25][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.683184105;
    out_shs[15] = c0 * d;
    out_shs[27] = s0 * d;
    d = 4.099104631;
    out_grads[15][0] = c1 * d;
    out_grads[27][0] = s1 * d;
    out_grads[15][1] = -s1 * d;
    out_grads[27][1] = c1 * d;
    d = -2.366619162;
    out_grads[16][2] = -c1 * d;
    out_grads[26][2] = s1 * d;
    out_grads[0][0] = 0.0;
    out_grads[0][1] = 0.0;
    out_grads[0][2] = 0.0;
    out_grads[1][2] = 0.0;
    out_grads[3][0] = 0.0;
    out_grads[3][1] = 0.0;
    out_grads[5][2] = 0.0;
    out_grads[6][2] = 0.0;
    out_grads[10][0] = 0.0;
    out_grads[10][1] = 0.0;
    out_grads[14][2] = 0.0;
    out_grads[15][2] = 0.0;
    out_grads[21][0] = 0.0;
    out_grads[21][1] = 0.0;
    out_grads[27][2] = 0.0;
}


void eval_sh_grad_8(out float out_shs[91], out vec3 out_grads[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    c0 = 1.0;
    s0 = 0.0;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    b = z2 * a - 0.253968254 * b;
    a = b - 0.252525253 * a;
    d = 14.684485724 * a;
    out_shs[21] = d;
    b = z2 * a - 0.251748252 * b;
    a = b - 0.251282051 * a;
    d = 58.473368113 * a;
    out_shs[36] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    out_grads[2][0] = -c0 * d;
    out_grads[4][0] = s0 * d;
    out_grads[2][1] = s0 * d;
    out_grads[4][1] = c0 * d;
    d = 1.892349392 * z;
    out_grads[3][2] = d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    out_grads[9][0] = -c0 * d;
    out_grads[11][0] = s0 * d;
    out_grads[9][1] = s0 * d;
    out_grads[11][1] = c0 * d;
    d = 14.809976568 * b;
    out_grads[10][2] = d;
    a = z2 * b - 0.238095238 * a;
    b = a - 0.242424242 * b;
    d = -19.226504963 * b;
    out_shs[20] = -c1 * d;
    out_shs[22] = s1 * d;
    out_grads[20][0] = -c0 * d;
    out_grads[22][0] = s0 * d;
    out_grads[20][1] = s0 * d;
    out_grads[22][1] = c0 * d;
    d = 88.106914343 * b;
    out_grads[21][2] = d;
    a = z2 * b - 0.244755245 * a;
    b = a - 0.246153846 * b;
    d = -77.964490818 * b;
    out_shs[35] = -c1 * d;
    out_shs[37] = s1 * d;
    out_grads[35][0] = -c0 * d;
    out_grads[37][0] = s0 * d;
    out_grads[35][1] = s0 * d;
    out_grads[37][1] = c0 * d;
    d = 467.786944906 * b;
    out_grads[36][2] = d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    d = 1.092548431;
    out_grads[1][0] = c1 * d;
    out_grads[5][0] = s1 * d;
    out_grads[1][1] = -s1 * d;
    out_grads[5][1] = c1 * d;
    d = -1.092548431;
    out_grads[2][2] = -c1 * d;
    out_grads[4][2] = s1 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    d = 6.62322287 * a;
    out_grads[8][0] = c1 * d;
    out_grads[12][0] = s1 * d;
    out_grads[8][1] = -s1 * d;
    out_grads[12][1] = c1 * d;
    d = -14.049977415 * a;
    out_grads[9][2] = -c1 * d;
    out_grads[11][2] = s1 * d;
    b = z2 * (a - 0.19047619);
    a = b - 0.212121212 * a;
    d = 15.199886782 * a;
    out_shs[19] = c0 * d;
    out_shs[23] = s0 * d;
    d = 30.399773564 * a;
    out_grads[19][0] = c1 * d;
    out_grads[23][0] = s1 * d;
    out_grads[19][1] = -s1 * d;
    out_grads[23][1] = c1 * d;
    d = -96.132524816 * a;
    out_grads[20][2] = -c1 * d;
    out_grads[22][2] = s1 * d;
    b = z2 * a - 0.223776224 * b;
    a = b - 0.230769231 * a;
    d = 65.229772956 * a;
    out_shs[34] = c0 * d;
    out_shs[38] = s0 * d;
    d = 130.459545912 * a;
    out_grads[34][0] = c1 * d;
    out_grads[38][0] = s1 * d;
    out_grads[34][1] = -s1 * d;
    out_grads[38][1] = c1 * d;
    d = -545.751435723 * a;
    out_grads[35][2] = -c1 * d;
    out_grads[37][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    d = -5.310392309 * z;
    out_grads[7][0] = -c0 * d;
    out_grads[13][0] = s0 * d;
    out_grads[7][1] = s0 * d;
    out_grads[13][1] = c0 * d;
    d = 6.62322287 * z;
    out_grads[8][2] = c0 * d;
    out_grads[12][2] = s0 * d;
    a = (z2 - 0.111111111) * z;
    b = a - 0.161616162 * z;
    d = -10.133257855 * b;
    out_shs[18] = -c1 * d;
    out_shs[24] = s1 * d;
    d = -30.399773564 * b;
    out_grads[18][0] = -c0 * d;
    out_grads[24][0] = s0 * d;
    out_grads[18][1] = s0 * d;
    out_grads[24][1] = c0 * d;
    d = 60.799547128 * b;
    out_grads[19][2] = c0 * d;
    out_grads[23][2] = s0 * d;
    a = z2 * b - 0.188811189 * a;
    b = a - 0.205128205 * b;
    d = -48.175380057 * b;
    out_shs[33] = -c1 * d;
    out_shs[39] = s1 * d;
    d = -144.52614017 * b;
    out_grads[33][0] = -c0 * d;
    out_grads[39][0] = s0 * d;
    out_grads[33][1] = s0 * d;
    out_grads[39][1] = c0 * d;
    d = 391.378637737 * b;
    out_grads[34][2] = c0 * d;
    out_grads[38][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    d = 2.503342942;
    out_grads[6][0] = c1 * d;
    out_grads[14][0] = s1 * d;
    out_grads[6][1] = -s1 * d;
    out_grads[14][1] = c1 * d;
    d = -1.77013077;
    out_grads[7][2] = -c1 * d;
    out_grads[13][2] = s1 * d;
    a = z2 - 9.09090909e-02;
    d = 5.550213908 * a;
    out_shs[17] = c0 * d;
    out_shs[25] = s0 * d;
    d = 22.200855632 * a;
    out_grads[17][0] = c1 * d;
    out_grads[25][0] = s1 * d;
    out_grads[17][1] = -s1 * d;
    out_grads[25][1] = c1 * d;
    d = -30.399773564 * a;
    out_grads[18][2] = -c1 * d;
    out_grads[24][2] = s1 * d;
    b = z2 * (a - 0.13986014);
    a = b - 0.169230769 * a;
    d = 31.097074109 * a;
    out_shs[32] = c0 * d;
    out_shs[40] = s0 * d;
    d = 124.388296437 * a;
    out_grads[32][0] = c1 * d;
    out_grads[40][0] = s1 * d;
    out_grads[32][1] = -s1 * d;
    out_grads[40][1] = c1 * d;
    d = -240.876900283 * a;
    out_grads[33][2] = -c1 * d;
    out_grads[39][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.366619162 * z;
    out_shs[16] = -c1 * d;
    out_shs[26] = s1 * d;
    d = -11.833095811 * z;
    out_grads[16][0] = -c0 * d;
    out_grads[26][0] = s0 * d;
    out_grads[16][1] = s0 * d;
    out_grads[26][1] = c0 * d;
    d = 11.100427816 * z;
    out_grads[17][2] = c0 * d;
    out_grads[25][2] = s0 * d;
    a = (z2 - 7.69230769e-02) * z;
    b = a - 0.123076923 * z;
    d = -17.24955311 * b;
    out_shs[31] = -c1 * d;
    out_shs[41] = s1 * d;
    d = -86.247765552 * b;
    out_grads[31][0] = -c0 * d;
    out_grads[41][0] = s0 * d;
    out_grads[31][1] = s0 * d;
    out_grads[41][1] = c0 * d;
    d = 124.388296437 * b;
    out_grads[32][2] = c0 * d;
    out_grads[40][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.683184105;
    out_shs[15] = c0 * d;
    out_shs[27] = s0 * d;
    d = 4.099104631;
    out_grads[15][0] = c1 * d;
    out_grads[27][0] = s1 * d;
    out_grads[15][1] = -s1 * d;
    out_grads[27][1] = c1 * d;
    d = -2.366619162;
    out_grads[16][2] = -c1 * d;
    out_grads[26][2] = s1 * d;
    a = z2 - 6.66666667e-02;
    d = 7.984991491 * a;
    out_shs[30] = c0 * d;
    out_shs[42] = s0 * d;
    d = 47.909948945 * a;
    out_grads[30][0] = c1 * d;
    out_grads[42][0] = s1 * d;
    out_grads[30][1] = -s1 * d;
    out_grads[42][1] = c1 * d;
    d = -51.748659331 * a;
    out_grads[31][2] = -c1 * d;
    out_grads[41][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.915706641 * z;
    out_shs[29] = -c1 * d;
    out_shs[43] = s1 * d;
    d = -20.409946485 * z;
    out_grads[29][0] = -c0 * d;
    out_grads[43][0] = s0 * d;
    out_grads[29][1] = s0 * d;
    out_grads[43][1] = c0 * d;
    d = 15.969982982 * z;
    out_grads[30][2] = c0 * d;
    out_grads[42][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.72892666;
    out_shs[28] = c0 * d;
    out_shs[44] = s0 * d;
    d = 5.831413281;
    out_grads[28][0] = c1 * d;
    out_grads[44][0] = s1 * d;
    out_grads[28][1] = -s1 * d;
    out_grads[44][1] = c1 * d;
    d = -2.915706641;
    out_grads[29][2] = -c1 * d;
    out_grads[43][2] = s1 * d;
    out_grads[0][0] = 0.0;
    out_grads[0][1] = 0.0;
    out_grads[0][2] = 0.0;
    out_grads[1][2] = 0.0;
    out_grads[3][0] = 0.0;
    out_grads[3][1] = 0.0;
    out_grads[5][2] = 0.0;
    out_grads[6][2] = 0.0;
    out_grads[10][0] = 0.0;
    out_grads[10][1] = 0.0;
    out_grads[14][2] = 0.0;
    out_grads[15][2] = 0.0;
    out_grads[21][0] = 0.0;
    out_grads[21][1] = 0.0;
    out_grads[27][2] = 0.0;
    out_grads[28][2] = 0.0;
    out_grads[36][0] = 0.0;
    out_grads[36][1] = 0.0;
    out_grads[44][2] = 0.0;
}


void eval_sh_grad_10(out float out_shs[91], out vec3 out_grads[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    c0 = 1.0;
    s0 = 0.0;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    b = z2 * a - 0.253968254 * b;
    a = b - 0.252525253 * a;
    d = 14.684485724 * a;
    out_shs[21] = d;
    b = z2 * a - 0.251748252 * b;
    a = b - 0.251282051 * a;
    d = 58.473368113 * a;
    out_shs[36] = d;
    b = z2 * a - 0.250980392 * b;
    a = b - 0.250773994 * a;
    d = 233.240148813 * a;
    out_shs[55] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    out_grads[2][0] = -c0 * d;
    out_grads[4][0] = s0 * d;
    out_grads[2][1] = s0 * d;
    out_grads[4][1] = c0 * d;
    d = 1.892349392 * z;
    out_grads[3][2] = d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    out_grads[9][0] = -c0 * d;
    out_grads[11][0] = s0 * d;
    out_grads[9][1] = s0 * d;
    out_grads[11][1] = c0 * d;
    d = 14.809976568 * b;
    out_grads[10][2] = d;
    a = z2 * b - 0.238095238 * a;
    b = a - 0.242424242 * b;
    d = -19.226504963 * b;
    out_shs[20] = -c1 * d;
    out_shs[22] = s1 * d;
    out_grads[20][0] = -c0 * d;
    out_grads[22][0] = s0 * d;
    out_grads[20][1] = s0 * d;
    out_grads[22][1] = c0 * d;
    d = 88.106914343 * b;
    out_grads[21][2] = d;
    a = z2 * b - 0.244755245 * a;
    b = a - 0.246153846 * b;
    d = -77.964490818 * b;
    out_shs[35] = -c1 * d;
    out_shs[37] = s1 * d;
    out_grads[35][0] = -c0 * d;
    out_grads[37][0] = s0 * d;
    out_grads[35][1] = s0 * d;
    out_grads[37][1] = c0 * d;
    d = 467.786944906 * b;
    out_grads[36][2] = d;
    a = z2 * b - 0.247058824 * a;
    b = a - 0.247678019 * b;
    d = -314.500952502 * b;
    out_shs[54] = -c1 * d;
    out_shs[56] = s1 * d;
    out_grads[54][0] = -c0 * d;
    out_grads[56][0] = s0 * d;
    out_grads[54][1] = s0 * d;
    out_grads[56][1] = c0 * d;
    d = 2332.401488133 * b;
    out_grads[55][2] = d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    d = 1.092548431;
    out_grads[1][0] = c1 * d;
    out_grads[5][0] = s1 * d;
    out_grads[1][1] = -s1 * d;
    out_grads[5][1] = c1 * d;
    d = -1.092548431;
    out_grads[2][2] = -c1 * d;
    out_grads[4][2] = s1 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    d = 6.62322287 * a;
    out_grads[8][0] = c1 * d;
    out_grads[12][0] = s1 * d;
    out_grads[8][1] = -s1 * d;
    out_grads[12][1] = c1 * d;
    d = -14.049977415 * a;
    out_grads[9][2] = -c1 * d;
    out_grads[11][2] = s1 * d;
    b = z2 * (a - 0.19047619);
    a = b - 0.212121212 * a;
    d = 15.199886782 * a;
    out_shs[19] = c0 * d;
    out_shs[23] = s0 * d;
    d = 30.399773564 * a;
    out_grads[19][0] = c1 * d;
    out_grads[23][0] = s1 * d;
    out_grads[19][1] = -s1 * d;
    out_grads[23][1] = c1 * d;
    d = -96.132524816 * a;
    out_grads[20][2] = -c1 * d;
    out_grads[22][2] = s1 * d;
    b = z2 * a - 0.223776224 * b;
    a = b - 0.230769231 * a;
    d = 65.229772956 * a;
    out_shs[34] = c0 * d;
    out_shs[38] = s0 * d;
    d = 130.459545912 * a;
    out_grads[34][0] = c1 * d;
    out_grads[38][0] = s1 * d;
    out_grads[34][1] = -s1 * d;
    out_grads[38][1] = c1 * d;
    d = -545.751435723 * a;
    out_grads[35][2] = -c1 * d;
    out_grads[37][2] = s1 * d;
    b = z2 * a - 0.235294118 * b;
    a = b - 0.238390093 * a;
    d = 272.365814381 * a;
    out_shs[53] = c0 * d;
    out_shs[57] = s0 * d;
    d = 544.731628762 * a;
    out_grads[53][0] = c1 * d;
    out_grads[57][0] = s1 * d;
    out_grads[53][1] = -s1 * d;
    out_grads[57][1] = c1 * d;
    d = -2830.508572514 * a;
    out_grads[54][2] = -c1 * d;
    out_grads[56][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    d = -5.310392309 * z;
    out_grads[7][0] = -c0 * d;
    out_grads[13][0] = s0 * d;
    out_grads[7][1] = s0 * d;
    out_grads[13][1] = c0 * d;
    d = 6.62322287 * z;
    out_grads[8][2] = c0 * d;
    out_grads[12][2] = s0 * d;
    a = (z2 - 0.111111111) * z;
    b = a - 0.161616162 * z;
    d = -10.133257855 * b;
    out_shs[18] = -c1 * d;
    out_shs[24] = s1 * d;
    d = -30.399773564 * b;
    out_grads[18][0] = -c0 * d;
    out_grads[24][0] = s0 * d;
    out_grads[18][1] = s0 * d;
    out_grads[24][1] = c0 * d;
    d = 60.799547128 * b;
    out_grads[19][2] = c0 * d;
    out_grads[23][2] = s0 * d;
    a = z2 * b - 0.188811189 * a;
    b = a - 0.205128205 * b;
    d = -48.175380057 * b;
    out_shs[33] = -c1 * d;
    out_shs[39] = s1 * d;
    d = -144.52614017 * b;
    out_grads[33][0] = -c0 * d;
    out_grads[39][0] = s0 * d;
    out_grads[33][1] = s0 * d;
    out_grads[39][1] = c0 * d;
    d = 391.378637737 * b;
    out_grads[34][2] = c0 * d;
    out_grads[38][2] = s0 * d;
    a = z2 * b - 0.215686275 * a;
    b = a - 0.222910217 * b;
    d = -213.661323441 * b;
    out_shs[52] = -c1 * d;
    out_shs[58] = s1 * d;
    d = -640.983970322 * b;
    out_grads[52][0] = -c0 * d;
    out_grads[58][0] = s0 * d;
    out_grads[52][1] = s0 * d;
    out_grads[58][1] = c0 * d;
    d = 2178.926515046 * b;
    out_grads[53][2] = c0 * d;
    out_grads[57][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    d = 2.503342942;
    out_grads[6][0] = c1 * d;
    out_grads[14][0] = s1 * d;
    out_grads[6][1] = -s1 * d;
    out_grads[14][1] = c1 * d;
    d = -1.77013077;
    out_grads[7][2] = -c1 * d;
    out_grads[13][2] = s1 * d;
    a = z2 - 9.09090909e-02;
    d = 5.550213908 * a;
    out_shs[17] = c0 * d;
    out_shs[25] = s0 * d;
    d = 22.200855632 * a;
    out_grads[17][0] = c1 * d;
    out_grads[25][0] = s1 * d;
    out_grads[17][1] = -s1 * d;
    out_grads[25][1] = c1 * d;
    d = -30.399773564 * a;
    out_grads[18][2] = -c1 * d;
    out_grads[24][2] = s1 * d;
    b = z2 * (a - 0.13986014);
    a = b - 0.169230769 * a;
    d = 31.097074109 * a;
    out_shs[32] = c0 * d;
    out_shs[40] = s0 * d;
    d = 124.388296437 * a;
    out_grads[32][0] = c1 * d;
    out_grads[40][0] = s1 * d;
    out_grads[32][1] = -s1 * d;
    out_grads[40][1] = c1 * d;
    d = -240.876900283 * a;
    out_grads[33][2] = -c1 * d;
    out_grads[39][2] = s1 * d;
    b = z2 * a - 0.188235294 * b;
    a = b - 0.20123839 * a;
    d = 151.081370682 * a;
    out_shs[51] = c0 * d;
    out_shs[59] = s0 * d;
    d = 604.325482728 * a;
    out_grads[51][0] = c1 * d;
    out_grads[59][0] = s1 * d;
    out_grads[51][1] = -s1 * d;
    out_grads[59][1] = c1 * d;
    d = -1495.629264084 * a;
    out_grads[52][2] = -c1 * d;
    out_grads[58][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.366619162 * z;
    out_shs[16] = -c1 * d;
    out_shs[26] = s1 * d;
    d = -11.833095811 * z;
    out_grads[16][0] = -c0 * d;
    out_grads[26][0] = s0 * d;
    out_grads[16][1] = s0 * d;
    out_grads[26][1] = c0 * d;
    d = 11.100427816 * z;
    out_grads[17][2] = c0 * d;
    out_grads[25][2] = s0 * d;
    a = (z2 - 7.69230769e-02) * z;
    b = a - 0.123076923 * z;
    d = -17.24955311 * b;
    out_shs[31] = -c1 * d;
    out_shs[41] = s1 * d;
    d = -86.247765552 * b;
    out_grads[31][0] = -c0 * d;
    out_grads[41][0] = s0 * d;
    out_grads[31][1] = s0 * d;
    out_grads[41][1] = c0 * d;
    d = 124.388296437 * b;
    out_grads[32][2] = c0 * d;
    out_grads[40][2] = s0 * d;
    a = z2 * b - 0.152941176 * a;
    b = a - 0.173374613 * b;
    d = -95.552248675 * b;
    out_shs[50] = -c1 * d;
    out_shs[60] = s1 * d;
    d = -477.761243376 * b;
    out_grads[50][0] = -c0 * d;
    out_grads[60][0] = s0 * d;
    out_grads[50][1] = s0 * d;
    out_grads[60][1] = c0 * d;
    d = 906.488224092 * b;
    out_grads[51][2] = c0 * d;
    out_grads[59][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.683184105;
    out_shs[15] = c0 * d;
    out_shs[27] = s0 * d;
    d = 4.099104631;
    out_grads[15][0] = c1 * d;
    out_grads[27][0] = s1 * d;
    out_grads[15][1] = -s1 * d;
    out_grads[27][1] = c1 * d;
    d = -2.366619162;
    out_grads[16][2] = -c1 * d;
    out_grads[26][2] = s1 * d;
    a = z2 - 6.66666667e-02;
    d = 7.984991491 * a;
    out_shs[30] = c0 * d;
    out_shs[42] = s0 * d;
    d = 47.909948945 * a;
    out_grads[30][0] = c1 * d;
    out_grads[42][0] = s1 * d;
    out_grads[30][1] = -s1 * d;
    out_grads[42][1] = c1 * d;
    d = -51.748659331 * a;
    out_grads[31][2] = -c1 * d;
    out_grads[41][2] = s1 * d;
    b = z2 * (a - 0.109803922);
    a = b - 0.139318885 * a;
    d = 53.41533086 * a;
    out_shs[49] = c0 * d;
    out_shs[61] = s0 * d;
    d = 320.491985161 * a;
    out_grads[49][0] = c1 * d;
    out_grads[61][0] = s1 * d;
    out_grads[49][1] = -s1 * d;
    out_grads[61][1] = c1 * d;
    d = -477.761243376 * a;
    out_grads[50][2] = -c1 * d;
    out_grads[60][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.915706641 * z;
    out_shs[29] = -c1 * d;
    out_shs[43] = s1 * d;
    d = -20.409946485 * z;
    out_grads[29][0] = -c0 * d;
    out_grads[43][0] = s0 * d;
    out_grads[29][1] = s0 * d;
    out_grads[43][1] = c0 * d;
    d = 15.969982982 * z;
    out_grads[30][2] = c0 * d;
    out_grads[42][2] = s0 * d;
    a = (z2 - 5.88235294e-02) * z;
    b = a - 9.90712074e-02 * z;
    d = -25.910241313 * b;
    out_shs[48] = -c1 * d;
    out_shs[62] = s1 * d;
    d = -181.371689194 * b;
    out_grads[48][0] = -c0 * d;
    out_grads[62][0] = s0 * d;
    out_grads[48][1] = s0 * d;
    out_grads[62][1] = c0 * d;
    d = 213.661323441 * b;
    out_grads[49][2] = c0 * d;
    out_grads[61][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.72892666;
    out_shs[28] = c0 * d;
    out_shs[44] = s0 * d;
    d = 5.831413281;
    out_grads[28][0] = c1 * d;
    out_grads[44][0] = s1 * d;
    out_grads[28][1] = -s1 * d;
    out_grads[44][1] = c1 * d;
    d = -2.915706641;
    out_grads[29][2] = -c1 * d;
    out_grads[43][2] = s1 * d;
    a = z2 - 5.26315789e-02;
    d = 10.577811722 * a;
    out_shs[47] = c0 * d;
    out_shs[63] = s0 * d;
    d = 84.622493774 * a;
    out_grads[47][0] = c1 * d;
    out_grads[63][0] = s1 * d;
    out_grads[47][1] = -s1 * d;
    out_grads[63][1] = c1 * d;
    d = -77.73072394 * a;
    out_grads[48][2] = -c1 * d;
    out_grads[62][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -3.4318953 * z;
    out_shs[46] = -c1 * d;
    out_shs[64] = s1 * d;
    d = -30.887057699 * z;
    out_grads[46][0] = -c0 * d;
    out_grads[64][0] = s0 * d;
    out_grads[46][1] = s0 * d;
    out_grads[64][1] = c0 * d;
    d = 21.155623443 * z;
    out_grads[47][2] = c0 * d;
    out_grads[63][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.767395118;
    out_shs[45] = c0 * d;
    out_shs[65] = s0 * d;
    d = 7.673951182;
    out_grads[45][0] = c1 * d;
    out_grads[65][0] = s1 * d;
    out_grads[45][1] = -s1 * d;
    out_grads[65][1] = c1 * d;
    d = -3.4318953;
    out_grads[46][2] = -c1 * d;
    out_grads[64][2] = s1 * d;
    out_grads[0][0] = 0.0;
    out_grads[0][1] = 0.0;
    out_grads[0][2] = 0.0;
    out_grads[1][2] = 0.0;
    out_grads[3][0] = 0.0;
    out_grads[3][1] = 0.0;
    out_grads[5][2] = 0.0;
    out_grads[6][2] = 0.0;
    out_grads[10][0] = 0.0;
    out_grads[10][1] = 0.0;
    out_grads[14][2] = 0.0;
    out_grads[15][2] = 0.0;
    out_grads[21][0] = 0.0;
    out_grads[21][1] = 0.0;
    out_grads[27][2] = 0.0;
    out_grads[28][2] = 0.0;
    out_grads[36][0] = 0.0;
    out_grads[36][1] = 0.0;
    out_grads[44][2] = 0.0;
    out_grads[45][2] = 0.0;
    out_grads[55][0] = 0.0;
    out_grads[55][1] = 0.0;
    out_grads[65][2] = 0.0;
}


void eval_sh_grad_12(out float out_shs[91], out vec3 out_grads[91], vec3 point) {
    float x, y, z, z2, c0, s0, c1, s1, d, a, b;
    x = point[0];
    y = point[1];
    z = point[2];
    z2 = z * z;
    c0 = 1.0;
    s0 = 0.0;
    d = 0.282094792;
    out_shs[0] = d;
    a = z2 - 0.333333333;
    d = 0.946174696 * a;
    out_shs[3] = d;
    b = z2 * (a - 0.266666667);
    a = b - 0.257142857 * a;
    d = 3.702494142 * a;
    out_shs[10] = d;
    b = z2 * a - 0.253968254 * b;
    a = b - 0.252525253 * a;
    d = 14.684485724 * a;
    out_shs[21] = d;
    b = z2 * a - 0.251748252 * b;
    a = b - 0.251282051 * a;
    d = 58.473368113 * a;
    out_shs[36] = d;
    b = z2 * a - 0.250980392 * b;
    a = b - 0.250773994 * a;
    d = 233.240148813 * a;
    out_shs[55] = d;
    b = z2 * a - 0.250626566 * b;
    a = b - 0.250517598 * a;
    d = 931.186918633 * a;
    out_shs[78] = d;
    c1 = x;
    s1 = y;
    d = -1.092548431 * z;
    out_shs[2] = -c1 * d;
    out_shs[4] = s1 * d;
    out_grads[2][0] = -c0 * d;
    out_grads[4][0] = s0 * d;
    out_grads[2][1] = s0 * d;
    out_grads[4][1] = c0 * d;
    d = 1.892349392 * z;
    out_grads[3][2] = d;
    a = (z2 - 0.2) * z;
    b = a - 0.228571429 * z;
    d = -4.683325805 * b;
    out_shs[9] = -c1 * d;
    out_shs[11] = s1 * d;
    out_grads[9][0] = -c0 * d;
    out_grads[11][0] = s0 * d;
    out_grads[9][1] = s0 * d;
    out_grads[11][1] = c0 * d;
    d = 14.809976568 * b;
    out_grads[10][2] = d;
    a = z2 * b - 0.238095238 * a;
    b = a - 0.242424242 * b;
    d = -19.226504963 * b;
    out_shs[20] = -c1 * d;
    out_shs[22] = s1 * d;
    out_grads[20][0] = -c0 * d;
    out_grads[22][0] = s0 * d;
    out_grads[20][1] = s0 * d;
    out_grads[22][1] = c0 * d;
    d = 88.106914343 * b;
    out_grads[21][2] = d;
    a = z2 * b - 0.244755245 * a;
    b = a - 0.246153846 * b;
    d = -77.964490818 * b;
    out_shs[35] = -c1 * d;
    out_shs[37] = s1 * d;
    out_grads[35][0] = -c0 * d;
    out_grads[37][0] = s0 * d;
    out_grads[35][1] = s0 * d;
    out_grads[37][1] = c0 * d;
    d = 467.786944906 * b;
    out_grads[36][2] = d;
    a = z2 * b - 0.247058824 * a;
    b = a - 0.247678019 * b;
    d = -314.500952502 * b;
    out_shs[54] = -c1 * d;
    out_shs[56] = s1 * d;
    out_grads[54][0] = -c0 * d;
    out_grads[56][0] = s0 * d;
    out_grads[54][1] = s0 * d;
    out_grads[56][1] = c0 * d;
    d = 2332.401488133 * b;
    out_grads[55][2] = d;
    a = z2 * b - 0.248120301 * a;
    b = a - 0.248447205 * b;
    d = -1265.233874957 * b;
    out_shs[77] = -c1 * d;
    out_shs[79] = s1 * d;
    out_grads[77][0] = -c0 * d;
    out_grads[79][0] = s0 * d;
    out_grads[77][1] = s0 * d;
    out_grads[79][1] = c0 * d;
    d = 11174.243023595 * b;
    out_grads[78][2] = d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.546274215;
    out_shs[1] = c0 * d;
    out_shs[5] = s0 * d;
    d = 1.092548431;
    out_grads[1][0] = c1 * d;
    out_grads[5][0] = s1 * d;
    out_grads[1][1] = -s1 * d;
    out_grads[5][1] = c1 * d;
    d = -1.092548431;
    out_grads[2][2] = -c1 * d;
    out_grads[4][2] = s1 * d;
    a = z2 - 0.142857143;
    d = 3.311611435 * a;
    out_shs[8] = c0 * d;
    out_shs[12] = s0 * d;
    d = 6.62322287 * a;
    out_grads[8][0] = c1 * d;
    out_grads[12][0] = s1 * d;
    out_grads[8][1] = -s1 * d;
    out_grads[12][1] = c1 * d;
    d = -14.049977415 * a;
    out_grads[9][2] = -c1 * d;
    out_grads[11][2] = s1 * d;
    b = z2 * (a - 0.19047619);
    a = b - 0.212121212 * a;
    d = 15.199886782 * a;
    out_shs[19] = c0 * d;
    out_shs[23] = s0 * d;
    d = 30.399773564 * a;
    out_grads[19][0] = c1 * d;
    out_grads[23][0] = s1 * d;
    out_grads[19][1] = -s1 * d;
    out_grads[23][1] = c1 * d;
    d = -96.132524816 * a;
    out_grads[20][2] = -c1 * d;
    out_grads[22][2] = s1 * d;
    b = z2 * a - 0.223776224 * b;
    a = b - 0.230769231 * a;
    d = 65.229772956 * a;
    out_shs[34] = c0 * d;
    out_shs[38] = s0 * d;
    d = 130.459545912 * a;
    out_grads[34][0] = c1 * d;
    out_grads[38][0] = s1 * d;
    out_grads[34][1] = -s1 * d;
    out_grads[38][1] = c1 * d;
    d = -545.751435723 * a;
    out_grads[35][2] = -c1 * d;
    out_grads[37][2] = s1 * d;
    b = z2 * a - 0.235294118 * b;
    a = b - 0.238390093 * a;
    d = 272.365814381 * a;
    out_shs[53] = c0 * d;
    out_shs[57] = s0 * d;
    d = 544.731628762 * a;
    out_grads[53][0] = c1 * d;
    out_grads[57][0] = s1 * d;
    out_grads[53][1] = -s1 * d;
    out_grads[57][1] = c1 * d;
    d = -2830.508572514 * a;
    out_grads[54][2] = -c1 * d;
    out_grads[56][2] = s1 * d;
    b = z2 * a - 0.240601504 * b;
    a = b - 0.242236025 * a;
    d = 1121.509962433 * a;
    out_shs[76] = c0 * d;
    out_shs[80] = s0 * d;
    d = 2243.019924866 * a;
    out_grads[76][0] = c1 * d;
    out_grads[80][0] = s1 * d;
    out_grads[76][1] = -s1 * d;
    out_grads[80][1] = c1 * d;
    d = -13917.572624524 * a;
    out_grads[77][2] = -c1 * d;
    out_grads[79][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -1.77013077 * z;
    out_shs[7] = -c1 * d;
    out_shs[13] = s1 * d;
    d = -5.310392309 * z;
    out_grads[7][0] = -c0 * d;
    out_grads[13][0] = s0 * d;
    out_grads[7][1] = s0 * d;
    out_grads[13][1] = c0 * d;
    d = 6.62322287 * z;
    out_grads[8][2] = c0 * d;
    out_grads[12][2] = s0 * d;
    a = (z2 - 0.111111111) * z;
    b = a - 0.161616162 * z;
    d = -10.133257855 * b;
    out_shs[18] = -c1 * d;
    out_shs[24] = s1 * d;
    d = -30.399773564 * b;
    out_grads[18][0] = -c0 * d;
    out_grads[24][0] = s0 * d;
    out_grads[18][1] = s0 * d;
    out_grads[24][1] = c0 * d;
    d = 60.799547128 * b;
    out_grads[19][2] = c0 * d;
    out_grads[23][2] = s0 * d;
    a = z2 * b - 0.188811189 * a;
    b = a - 0.205128205 * b;
    d = -48.175380057 * b;
    out_shs[33] = -c1 * d;
    out_shs[39] = s1 * d;
    d = -144.52614017 * b;
    out_grads[33][0] = -c0 * d;
    out_grads[39][0] = s0 * d;
    out_grads[33][1] = s0 * d;
    out_grads[39][1] = c0 * d;
    d = 391.378637737 * b;
    out_grads[34][2] = c0 * d;
    out_grads[38][2] = s0 * d;
    a = z2 * b - 0.215686275 * a;
    b = a - 0.222910217 * b;
    d = -213.661323441 * b;
    out_shs[52] = -c1 * d;
    out_shs[58] = s1 * d;
    d = -640.983970322 * b;
    out_grads[52][0] = -c0 * d;
    out_grads[58][0] = s0 * d;
    out_grads[52][1] = s0 * d;
    out_grads[58][1] = c0 * d;
    d = 2178.926515046 * b;
    out_grads[53][2] = c0 * d;
    out_grads[57][2] = s0 * d;
    a = z2 * b - 0.228070175 * a;
    b = a - 0.231884058 * b;
    d = -915.709049803 * b;
    out_shs[75] = -c1 * d;
    out_shs[81] = s1 * d;
    d = -2747.127149409 * b;
    out_grads[75][0] = -c0 * d;
    out_grads[81][0] = s0 * d;
    out_grads[75][1] = s0 * d;
    out_grads[81][1] = c0 * d;
    d = 11215.099624332 * b;
    out_grads[76][2] = c0 * d;
    out_grads[80][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.625835735;
    out_shs[6] = c0 * d;
    out_shs[14] = s0 * d;
    d = 2.503342942;
    out_grads[6][0] = c1 * d;
    out_grads[14][0] = s1 * d;
    out_grads[6][1] = -s1 * d;
    out_grads[14][1] = c1 * d;
    d = -1.77013077;
    out_grads[7][2] = -c1 * d;
    out_grads[13][2] = s1 * d;
    a = z2 - 9.09090909e-02;
    d = 5.550213908 * a;
    out_shs[17] = c0 * d;
    out_shs[25] = s0 * d;
    d = 22.200855632 * a;
    out_grads[17][0] = c1 * d;
    out_grads[25][0] = s1 * d;
    out_grads[17][1] = -s1 * d;
    out_grads[25][1] = c1 * d;
    d = -30.399773564 * a;
    out_grads[18][2] = -c1 * d;
    out_grads[24][2] = s1 * d;
    b = z2 * (a - 0.13986014);
    a = b - 0.169230769 * a;
    d = 31.097074109 * a;
    out_shs[32] = c0 * d;
    out_shs[40] = s0 * d;
    d = 124.388296437 * a;
    out_grads[32][0] = c1 * d;
    out_grads[40][0] = s1 * d;
    out_grads[32][1] = -s1 * d;
    out_grads[40][1] = c1 * d;
    d = -240.876900283 * a;
    out_grads[33][2] = -c1 * d;
    out_grads[39][2] = s1 * d;
    b = z2 * a - 0.188235294 * b;
    a = b - 0.20123839 * a;
    d = 151.081370682 * a;
    out_shs[51] = c0 * d;
    out_shs[59] = s0 * d;
    d = 604.325482728 * a;
    out_grads[51][0] = c1 * d;
    out_grads[59][0] = s1 * d;
    out_grads[51][1] = -s1 * d;
    out_grads[59][1] = c1 * d;
    d = -1495.629264084 * a;
    out_grads[52][2] = -c1 * d;
    out_grads[58][2] = s1 * d;
    b = z2 * a - 0.210526316 * b;
    a = b - 0.217391304 * a;
    d = 686.781787352 * a;
    out_shs[74] = c0 * d;
    out_shs[82] = s0 * d;
    d = 2747.127149409 * a;
    out_grads[74][0] = c1 * d;
    out_grads[82][0] = s1 * d;
    out_grads[74][1] = -s1 * d;
    out_grads[82][1] = c1 * d;
    d = -8241.381448228 * a;
    out_grads[75][2] = -c1 * d;
    out_grads[81][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.366619162 * z;
    out_shs[16] = -c1 * d;
    out_shs[26] = s1 * d;
    d = -11.833095811 * z;
    out_grads[16][0] = -c0 * d;
    out_grads[26][0] = s0 * d;
    out_grads[16][1] = s0 * d;
    out_grads[26][1] = c0 * d;
    d = 11.100427816 * z;
    out_grads[17][2] = c0 * d;
    out_grads[25][2] = s0 * d;
    a = (z2 - 7.69230769e-02) * z;
    b = a - 0.123076923 * z;
    d = -17.24955311 * b;
    out_shs[31] = -c1 * d;
    out_shs[41] = s1 * d;
    d = -86.247765552 * b;
    out_grads[31][0] = -c0 * d;
    out_grads[41][0] = s0 * d;
    out_grads[31][1] = s0 * d;
    out_grads[41][1] = c0 * d;
    d = 124.388296437 * b;
    out_grads[32][2] = c0 * d;
    out_grads[40][2] = s0 * d;
    a = z2 * b - 0.152941176 * a;
    b = a - 0.173374613 * b;
    d = -95.552248675 * b;
    out_shs[50] = -c1 * d;
    out_shs[60] = s1 * d;
    d = -477.761243376 * b;
    out_grads[50][0] = -c0 * d;
    out_grads[60][0] = s0 * d;
    out_grads[50][1] = s0 * d;
    out_grads[60][1] = c0 * d;
    d = 906.488224092 * b;
    out_grads[51][2] = c0 * d;
    out_grads[59][2] = s0 * d;
    a = z2 * b - 0.187969925 * a;
    b = a - 0.198757764 * b;
    d = -471.12841933 * b;
    out_shs[73] = -c1 * d;
    out_shs[83] = s1 * d;
    d = -2355.642096651 * b;
    out_grads[73][0] = -c0 * d;
    out_grads[83][0] = s0 * d;
    out_grads[73][1] = s0 * d;
    out_grads[83][1] = c0 * d;
    d = 5494.254298819 * b;
    out_grads[74][2] = c0 * d;
    out_grads[82][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.683184105;
    out_shs[15] = c0 * d;
    out_shs[27] = s0 * d;
    d = 4.099104631;
    out_grads[15][0] = c1 * d;
    out_grads[27][0] = s1 * d;
    out_grads[15][1] = -s1 * d;
    out_grads[27][1] = c1 * d;
    d = -2.366619162;
    out_grads[16][2] = -c1 * d;
    out_grads[26][2] = s1 * d;
    a = z2 - 6.66666667e-02;
    d = 7.984991491 * a;
    out_shs[30] = c0 * d;
    out_shs[42] = s0 * d;
    d = 47.909948945 * a;
    out_grads[30][0] = c1 * d;
    out_grads[42][0] = s1 * d;
    out_grads[30][1] = -s1 * d;
    out_grads[42][1] = c1 * d;
    d = -51.748659331 * a;
    out_grads[31][2] = -c1 * d;
    out_grads[41][2] = s1 * d;
    b = z2 * (a - 0.109803922);
    a = b - 0.139318885 * a;
    d = 53.41533086 * a;
    out_shs[49] = c0 * d;
    out_shs[61] = s0 * d;
    d = 320.491985161 * a;
    out_grads[49][0] = c1 * d;
    out_grads[61][0] = s1 * d;
    out_grads[49][1] = -s1 * d;
    out_grads[61][1] = c1 * d;
    d = -477.761243376 * a;
    out_grads[50][2] = -c1 * d;
    out_grads[60][2] = s1 * d;
    b = z2 * a - 0.160401003 * b;
    a = b - 0.175983437 * a;
    d = 293.800188384 * a;
    out_shs[72] = c0 * d;
    out_shs[84] = s0 * d;
    d = 1762.801130306 * a;
    out_grads[72][0] = c1 * d;
    out_grads[84][0] = s1 * d;
    out_grads[72][1] = -s1 * d;
    out_grads[84][1] = c1 * d;
    d = -3297.898935312 * a;
    out_grads[73][2] = -c1 * d;
    out_grads[83][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -2.915706641 * z;
    out_shs[29] = -c1 * d;
    out_shs[43] = s1 * d;
    d = -20.409946485 * z;
    out_grads[29][0] = -c0 * d;
    out_grads[43][0] = s0 * d;
    out_grads[29][1] = s0 * d;
    out_grads[43][1] = c0 * d;
    d = 15.969982982 * z;
    out_grads[30][2] = c0 * d;
    out_grads[42][2] = s0 * d;
    a = (z2 - 5.88235294e-02) * z;
    b = a - 9.90712074e-02 * z;
    d = -25.910241313 * b;
    out_shs[48] = -c1 * d;
    out_shs[62] = s1 * d;
    d = -181.371689194 * b;
    out_grads[48][0] = -c0 * d;
    out_grads[62][0] = s0 * d;
    out_grads[48][1] = s0 * d;
    out_grads[62][1] = c0 * d;
    d = 213.661323441 * b;
    out_grads[49][2] = c0 * d;
    out_grads[61][2] = s0 * d;
    a = z2 * b - 0.127819549 * a;
    b = a - 0.149068323 * b;
    d = -165.101452729 * b;
    out_shs[71] = -c1 * d;
    out_shs[85] = s1 * d;
    d = -1155.7101691 * b;
    out_grads[71][0] = -c0 * d;
    out_grads[85][0] = s0 * d;
    out_grads[71][1] = s0 * d;
    out_grads[85][1] = c0 * d;
    d = 1762.801130306 * b;
    out_grads[72][2] = c0 * d;
    out_grads[84][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.72892666;
    out_shs[28] = c0 * d;
    out_shs[44] = s0 * d;
    d = 5.831413281;
    out_grads[28][0] = c1 * d;
    out_grads[44][0] = s1 * d;
    out_grads[28][1] = -s1 * d;
    out_grads[44][1] = c1 * d;
    d = -2.915706641;
    out_grads[29][2] = -c1 * d;
    out_grads[43][2] = s1 * d;
    a = z2 - 5.26315789e-02;
    d = 10.577811722 * a;
    out_shs[47] = c0 * d;
    out_shs[63] = s0 * d;
    d = 84.622493774 * a;
    out_grads[47][0] = c1 * d;
    out_grads[63][0] = s1 * d;
    out_grads[47][1] = -s1 * d;
    out_grads[63][1] = c1 * d;
    d = -77.73072394 * a;
    out_grads[48][2] = -c1 * d;
    out_grads[62][2] = s1 * d;
    b = z2 * (a - 9.02255639e-02);
    a = b - 0.118012422 * a;
    d = 82.550726364 * a;
    out_shs[70] = c0 * d;
    out_shs[86] = s0 * d;
    d = 660.405810914 * a;
    out_grads[70][0] = c1 * d;
    out_grads[86][0] = s1 * d;
    out_grads[70][1] = -s1 * d;
    out_grads[86][1] = c1 * d;
    d = -825.507263643 * a;
    out_grads[71][2] = -c1 * d;
    out_grads[85][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -3.4318953 * z;
    out_shs[46] = -c1 * d;
    out_shs[64] = s1 * d;
    d = -30.887057699 * z;
    out_grads[46][0] = -c0 * d;
    out_grads[64][0] = s0 * d;
    out_grads[46][1] = s0 * d;
    out_grads[64][1] = c0 * d;
    d = 21.155623443 * z;
    out_grads[47][2] = c0 * d;
    out_grads[63][2] = s0 * d;
    a = (z2 - 4.76190476e-02) * z;
    b = a - 8.2815735e-02 * z;
    d = -36.028090689 * b;
    out_shs[69] = -c1 * d;
    out_shs[87] = s1 * d;
    d = -324.252816204 * b;
    out_grads[69][0] = -c0 * d;
    out_grads[87][0] = s0 * d;
    out_grads[69][1] = s0 * d;
    out_grads[87][1] = c0 * d;
    d = 330.202905457 * b;
    out_grads[70][2] = c0 * d;
    out_grads[86][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.767395118;
    out_shs[45] = c0 * d;
    out_shs[65] = s0 * d;
    d = 7.673951182;
    out_grads[45][0] = c1 * d;
    out_grads[65][0] = s1 * d;
    out_grads[45][1] = -s1 * d;
    out_grads[65][1] = c1 * d;
    d = -3.4318953;
    out_grads[46][2] = -c1 * d;
    out_grads[64][2] = s1 * d;
    a = z2 - 4.34782609e-02;
    d = 13.3042542 * a;
    out_shs[68] = c0 * d;
    out_shs[88] = s0 * d;
    d = 133.042542003 * a;
    out_grads[68][0] = c1 * d;
    out_grads[88][0] = s1 * d;
    out_grads[68][1] = -s1 * d;
    out_grads[88][1] = c1 * d;
    d = -108.084272068 * a;
    out_grads[69][2] = -c1 * d;
    out_grads[87][2] = s1 * d;
    c1 = x * c0 - y * s0;
    s1 = y * c0 + x * s0;
    d = -3.923210529 * z;
    out_shs[67] = -c1 * d;
    out_shs[89] = s1 * d;
    d = -43.155315818 * z;
    out_grads[67][0] = -c0 * d;
    out_grads[89][0] = s0 * d;
    out_grads[67][1] = s0 * d;
    out_grads[89][1] = c0 * d;
    d = 26.608508401 * z;
    out_grads[68][2] = c0 * d;
    out_grads[88][2] = s0 * d;
    c0 = x * c1 - y * s1;
    s0 = y * c1 + x * s1;
    d = 0.800821996;
    out_shs[66] = c0 * d;
    out_shs[90] = s0 * d;
    d = 9.609863949;
    out_grads[66][0] = c1 * d;
    out_grads[90][0] = s1 * d;
    out_grads[66][1] = -s1 * d;
    out_grads[90][1] = c1 * d;
    d = -3.923210529;
    out_grads[67][2] = -c1 * d;
    out_grads[89][2] = s1 * d;
    out_grads[0][0] = 0.0;
    out_grads[0][1] = 0.0;
    out_grads[0][2] = 0.0;
    out_grads[1][2] = 0.0;
    out_grads[3][0] = 0.0;
    out_grads[3][1] = 0.0;
    out_grads[5][2] = 0.0;
    out_grads[6][2] = 0.0;
    out_grads[10][0] = 0.0;
    out_grads[10][1] = 0.0;
    out_grads[14][2] = 0.0;
    out_grads[15][2] = 0.0;
    out_grads[21][0] = 0.0;
    out_grads[21][1] = 0.0;
    out_grads[27][2] = 0.0;
    out_grads[28][2] = 0.0;
    out_grads[36][0] = 0.0;
    out_grads[36][1] = 0.0;
    out_grads[44][2] = 0.0;
    out_grads[45][2] = 0.0;
    out_grads[55][0] = 0.0;
    out_grads[55][1] = 0.0;
    out_grads[65][2] = 0.0;
    out_grads[66][2] = 0.0;
    out_grads[78][0] = 0.0;
    out_grads[78][1] = 0.0;
    out_grads[90][2] = 0.0;
}

// +-------------------------------------------------+
// |   SH Glyph:                                     |
// |                                                 |
// |   SH coefficients from here:                    |
// |       https://www.shadertoy.com/view/dlGSDV     |
// |                                                 |
// |   Expected input uv ranges:                     |
// |   u = [0, PI)                                   |
// |   v = [0, TWO_PI)                               |
// +-------------------------------------------------+
vec3 get_sh_glyph(float u, float v)
{
	float out_shs[91];
	int sh_count = 0;
	
	switch (ubo.mDebugSlidersi[0])
	{
	case 2:
		eval_sh_2(out_shs, to_sphere(u, v));
		sh_count = 6;
		break;
	case 4:
		eval_sh_4(out_shs, to_sphere(u, v));
		sh_count = 15;
		break;
	case 6:
		eval_sh_6(out_shs, to_sphere(u, v));
		sh_count = 28;
		break;
	case 8:
		eval_sh_8(out_shs, to_sphere(u, v));
		sh_count = 45;
		break;
	case 10:
		eval_sh_10(out_shs, to_sphere(u, v));
		sh_count = 66;
		break;
	case 12:
		eval_sh_12(out_shs, to_sphere(u, v));
		sh_count = 91;
		break;
	}
	
	float f = 0.0;
	for (int i = 0; i < sh_count; i++) {
		f += out_shs[i] * SH_COEFFS[i];
	}

	vec3 glyph = to_sphere(u, v, f);
    return rotate_x(glyph, -90);
}
